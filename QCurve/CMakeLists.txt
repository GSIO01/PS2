PROJECT(QCurve)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.5)
SET(CMAKE_AUTOMOC TRUE)

FIND_PACKAGE(Qt4 4.7 REQUIRED QtCore QtGui QtXml)

IF (CMAKE_COMPILER_IS_GNUCXX OR MINGW)
  ADD_DEFINITIONS("-Wall -Wextra")
ENDIF (CMAKE_COMPILER_IS_GNUCXX OR MINGW)

ADD_DEFINITIONS(-DQT_NO_STL -DQT_NO_CAST_TO_ASCII)

IF (${CMAKE_BUILD_TYPE} MATCHES "Release")
  ADD_DEFINITIONS("-O3")
  ADD_DEFINITIONS(-DNDEBUG)
  ADD_DEFINITIONS(-DQT_NO_DEBUG_OUTPUT)
  ADD_DEFINITIONS(-DQT_NO_WARNING_OUTPUT)
ENDIF (${CMAKE_BUILD_TYPE} MATCHES "Release")

INCLUDE_DIRECTORIES(${QT_INCLUDES} ${CMAKE_CURRENT_SOURCE_DIR}/src ${CMAKE_CURRENT_BINARY_DIR})

#ADD_SUBDIRECTORY(icons)
ADD_SUBDIRECTORY(src)
#ADD_SUBDIRECTORY(po)

SET (LANGUAGES po/trans_en.ts po/trans_de.ts)
QT4_ADD_TRANSLATION(TRANSLATIONS ${LANGUAGES})

IF (WIN32)
  QT4_ADD_RESOURCES(QCURVE_RES icons/icons.qrc)

  IF (MINGW)
    SET(CMAKE_RC_COMPILER_INIT windres)
    ENABLE_LANGUAGE(RC)
    SET(CMAKE_RC_COMPILE_OBJECT "<CMAKE_RC_COMPILER> -O coff <DEFINES> -i <SOURCE> -o <OBJECT>")
  ENDIF (MINGW)
  SET(QCURVE_SRCS ${QCURVE_SRCS} icons/qcurvewin.rc)

  IF (${CMAKE_BUILD_TYPE} MATCHES "Release")
    ADD_EXECUTABLE(QCurve WIN32 ${QCURVE_SRCS} ${QCURVE_RES} ${TRANSLATIONS})
  ELSE (${CMAKE_BUILD_TYPE} MATCHES "Release")
    ADD_EXECUTABLE(QCurve ${QCURVE_SRCS} ${QCURVE_RES} ${TRANSLATIONS})
  ENDIF (${CMAKE_BUILD_TYPE} MATCHES "Release")
ELSE (WIN32)
  ADD_EXECUTABLE(QCurve ${QCURVE_SRCS} ${TRANSLATIONS})
ENDIF (WIN32)

TARGET_LINK_LIBRARIES(QCurve ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QT_QTXML_LIBRARY})

ADD_CUSTOM_COMMAND(TARGET QCurve POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy trans_de.qm "${CMAKE_CURRENT_BINARY_DIR}/po/trans_de.qm")
ADD_CUSTOM_COMMAND(TARGET QCurve POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy trans_en.qm "${CMAKE_CURRENT_BINARY_DIR}/po/trans_en.qm")

IF (UNIX)
  INSTALL(TARGETS QCurve RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
  INSTALL(FILES ${TRANSLATIONS} DESTINATION "${CMAKE_INSTALL_PREFIX}/share/apps/qcurve/po")
  INSTALL(FILES "icons/hi16-app-qcurve.png" DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/16x16/apps" RENAME qcurve.png)
  INSTALL(FILES "icons/hi32-app-qcurve.png" DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/32x32/apps" RENAME qcurve.png)
  INSTALL(FILES "icons/hi48-app-qcurve.png" DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/48x48/apps" RENAME qcurve.png)
  INSTALL(FILES "icons/hi128-app-qcurve.png" DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/128x128/apps" RENAME qcurve.png)
  INSTALL(FILES "icons/hi256-app-qcurve.png" DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/256x256/apps" RENAME qcurve.png)
  SET(XDG_APPS_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/share/applications")

  IF (UNIX AND NOT APPLE)
    INSTALL(FILES qcurve.desktop DESTINATION ${XDG_APPS_INSTALL_DIR})
  ELSEIF (UNIX AND NOT APPLE)
    INSTALL(BUNDLE DESTINATION . COMPONENT Runtime)
  ENDIF (UNIX AND NOT APPLE)
ELSEIF (WIN32)
  INSTALL(TARGETS QCurve DESTINATION ${CMAKE_INSTALL_PREFIX})
  INSTALL(FILES ${TRANSLATIONS} DESTINATION "${CMAKE_INSTALL_PREFIX}/po")
  INSTALL(FILES "${QT_BINARY_DIR}/QtCore4.dll" DESTINATION ${CMAKE_INSTALL_PREFIX})
  INSTALL(FILES "${QT_BINARY_DIR}/QtGui4.dll" DESTINATION ${CMAKE_INSTALL_PREFIX})
  INSTALL(FILES "${QT_BINARY_DIR}/QtXml4.dll" DESTINATION ${CMAKE_INSTALL_PREFIX})
ENDIF (UNIX)
